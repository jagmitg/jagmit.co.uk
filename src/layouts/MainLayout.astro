---
import { getBlogsAndRepos } from "@utils/collections";
import Dropdown from "@components/Dropdown.astro";
import Breadcrumb from "@components/icons/Breadcrumb.astro";
import Pagination from "@components/Pagination.astro";

type Props = {
  title?: string;
  tags?: string[];
  breadcrumb?: boolean;
  pagination?: any;
};

const { title, tags, breadcrumb, pagination } = Astro.props;

const allPosts = (await getBlogsAndRepos()).allCollections;
const postYears = new Map();

allPosts.forEach((post: any) => {
  const year = new Date(post.data.date).getFullYear();

  if (!postYears.get(year)) {
    postYears.set(year, []);
  }

  postYears.get(year).push(post);
});

const currentPath = new URL(Astro.request.url).pathname;
const pathParts = currentPath.split("/").filter((part) => part !== "");

let currentTag: string | null = null;
let currentYear: string | null = null;

const tagsIndex = pathParts.indexOf("tags");
if (tagsIndex !== -1 && tagsIndex + 1 < pathParts.length) {
  currentTag = pathParts[tagsIndex + 1];
}

const archiveIndex = pathParts.indexOf("archive");
if (archiveIndex !== -1 && archiveIndex + 1 < pathParts.length) {
  currentYear = pathParts[archiveIndex + 1];
}

const tagOptions = tags?.map((tag) => ({ label: tag, value: tag }));
const archiveOptions = [...postYears.entries()].map(
  ([archiveYear, archivePosts]) => ({
    label: `${archiveYear} (${archivePosts.length})`,
    value: archiveYear.toString(),
  }),
);
---

{
  title && (
    <div class="flex flex-col sm:flex-row justify-between sm:justify-between items-center pb-6">
      <h2 class="text-2xl text-center sm:text-left mb-4 sm:mb-0 flex items-center">
        {breadcrumb ? (
          <>
            <a href="/blog/" class="mr-2">
              Blog
            </a>
            <Breadcrumb />
            <span>{title}</span>
          </>
        ) : (
          title
        )}
      </h2>

      {tags && (
        <div class="flex flex-wrap">
          <Dropdown
            options={tagOptions}
            currentSelection={currentTag}
            baseUrl="/blog/tags/"
            placeholder="tags..."
          />

          <Dropdown
            options={archiveOptions}
            currentSelection={currentYear}
            baseUrl="/blog/archive/"
            placeholder="archives..."
          />
        </div>
      )}
    </div>
  )
}

<slot />

{pagination && <Pagination prev={pagination.prev} next={pagination.next} />}
