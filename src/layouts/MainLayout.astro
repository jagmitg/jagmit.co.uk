---
import { getSortedPosts, getTagList } from "@utils/collections";
import Dropdown from "@components/Dropdown.astro";
import Breadcrumb from "@components/icons/Breadcrumb.astro";
import Pagination from "@components/Pagination.astro";

type Props = {
  title?: string;
  breadcrumb?: boolean;
  pagination?: any;
  dropdowns?: boolean;
};

const { title, breadcrumb, pagination, dropdowns } = Astro.props;

const allPosts = await getSortedPosts();
const allTags = await getTagList();
const postYears = new Map();

allPosts.forEach((post) => {
  const year = new Date(post.data.date).getFullYear();
  if (!postYears.has(year)) {
    postYears.set(year, []);
  }
  postYears.get(year).push(post);
});

const currentPath = new URL(Astro.request.url).pathname;
const pathParts = currentPath.split("/").filter((part) => part !== "");

let currentTag: string | null = null;
let currentYear: string | null = null;

const tagsIndex = pathParts.indexOf("tags");
if (tagsIndex !== -1 && tagsIndex + 1 < pathParts.length) {
  currentTag = pathParts[tagsIndex + 1];
}

const archiveIndex = pathParts.indexOf("archive");
if (archiveIndex !== -1 && archiveIndex + 1 < pathParts.length) {
  currentYear = pathParts[archiveIndex + 1];
}

const tagOptions = allTags.map((tag) => ({
  label: `${tag.name} (${tag.count})`,
  value: tag.name,
}));

const archiveOptions = [...postYears.entries()].map(
  ([archiveYear, archivePosts]) => ({
    label: `${archiveYear} (${archivePosts.length})`,
    value: archiveYear.toString(),
  }),
);
---

<div
  class="flex flex-col sm:flex-row justify-between sm:justify-between items-center pb-6"
>
  <h2 class="text-2xl text-center sm:text-left mb-4 sm:mb-0 flex items-center">
    {
      breadcrumb ? (
        <>
          <a href="/blog/" class="mr-2">
            Blog
          </a>
          <Breadcrumb />
          <span>{title}</span>
        </>
      ) : (
        title
      )
    }
  </h2>

  {
    dropdowns && (
      <div class="flex flex-wrap">
        <Dropdown
          options={tagOptions}
          currentSelection={currentTag || ""}
          baseUrl="/blog/tags/"
          placeholder="Select a tag..."
        />

        <Dropdown
          options={archiveOptions}
          currentSelection={currentYear || ""}
          baseUrl="/blog/archive/"
          placeholder="Select a year..."
        />
      </div>
    )
  }
</div>

<slot />

{pagination && <Pagination prev={pagination.prev} next={pagination.next} />}
