---
import Breadcrumb from '@components/icons/Breadcrumb.astro'
import Pagination from '@components/Pagination.astro'
import Dropdown from '@components/Dropdown.astro'
import { getCollection } from 'astro:content'
import { generateUniqueTags, matchesTagDefinition } from '@utils/collections'
import { TAGS_DEFINITION } from '@const'
import type { Post } from '@utils/collections'

type Props = {
    title?: string
    tags?: string[]
    breadcrumb?: boolean
    pagination?: {
        prev?: string
        next?: string
    }
}

const sortOptions = [
    { label: 'Newest First', value: 'creation_date_desc' },
    { label: 'Oldest First', value: 'creation_date_asc' },
    { label: 'Last Updated (Newest)', value: 'last_edit_date_desc' },
    { label: 'Last Updated (Oldest)', value: 'last_edit_date_asc' },
    { label: 'Most Views', value: 'view_count_desc' },
    { label: 'Least Views', value: 'view_count_asc' }
]

const questions = await getCollection('stackoverflow')

const questionPosts = questions.map(q => ({
    id: q.id,
    collection: 'stackoverflow' as const,
    slug: q.id,
    data: {
        ...q.data,
        tags: q.data.tags || []
    }
})) as unknown as Post[]

const uniqueTags = generateUniqueTags(questionPosts)

const tagOptions = uniqueTags.map((tag) => {
    const count = questions.filter(q =>
        q.data.tags?.some(t => matchesTagDefinition(t, TAGS_DEFINITION[tag] || []))
    ).length;
    return {
        label: `${tag} (${count})`,
        value: `${tag}`
    };
})

const { title, breadcrumb, pagination } = Astro.props
---

{
    title && (
        <div class="flex flex-col sm:flex-row justify-between sm:justify-between items-center pb-6">
            <h2 class="text-2xl text-center sm:text-left mb-4 sm:mb-0 flex items-center">
                {breadcrumb ? (
                    <>
                        <a href="/stackoverflow" class="mr-2">
                            StackOverflow
                        </a>
                        <Breadcrumb />
                        <span>{title}</span>
                    </>
                ) : (
                    title
                )}
            </h2>
            <div class="flex flex-wrap gap-2">
                <Dropdown
                    options={sortOptions}
                    currentSelection={Astro.params.sort}
                    baseUrl="/stackoverflow/sort/"
                    placeholder="Sort by..."
                />
                <Dropdown
                    options={tagOptions}
                    currentSelection={`${Astro.params.tag}/${Astro.params.page || '1'}`}
                    baseUrl="/stackoverflow/tags/"
                    placeholder="Tags..."
                />
            </div>
        </div>
    )
}

<slot />

{pagination && <Pagination prev={pagination.prev} next={pagination.next} />}
