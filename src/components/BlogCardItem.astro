---
import { parseTags } from "@utils/collections";
import { formatDate } from "@utils/formatDate";
import External from "@components/icons/External.astro";

import type { CollectionEntry } from "astro:content";
type Props = {
  url: string;
  frontmatter: CollectionEntry<"blog">["data"];
  repo: boolean;
};

const { url, frontmatter, repo } = Astro.props;
---

<a
  class="blogItemLink mb-6 hover:bg-gray-100 rounded-md border-top"
  href={url}
  target={repo ? "_blank" : undefined}
  rel={repo ? "noopener noreferrer" : undefined}
>
  <div class="flex flex-nowrap items-stretch">
    <div
      class="w-1/4 md:w-1/7 p-2 flex-none flex items-center justify-center overflow-hidden rounded-md border"
      style={`background-image: url(${
        frontmatter.image ? frontmatter.image : "/images/brands/github-big.png"
      }); background-size: cover; background-position: center;`}
      aria-label={frontmatter.title}
    >
    </div>

    <div class="w-3/4 md:w-6/7 p-2 pl-4 relative">
      {
        repo ? (
          <div class="absolute right-0">
            <External />
          </div>
        ) : undefined
      }
      <h2 class="font-bold mb-2">{frontmatter.title}</h2>
      <p class="text-gray-600 mb-4 text-sm">{frontmatter.description}</p>
      <div class="flex flex-wrap mt-2">
        <span
          class="bg-gray-200 text-gray-700 rounded-lg px-3 py-1 text-sm font-semibold mr-2 mb-2"
        >
          {formatDate(new Date(frontmatter.date))}
        </span>
        {
          parseTags(frontmatter.tags).map((tag) => (
            <span class="bg-gray-200 text-gray-700 rounded-lg px-3 py-1 text-sm font-semibold mr-2 mb-2 whitespace-normal">
              #{tag}
            </span>
          ))
        }
      </div>
    </div>
  </div>
</a>
