---
import Image from "./Image.astro";
import { parseTags } from "@utils/collections";
import { formatDate } from "@utils/formatDate";
import type { CollectionEntry } from "astro:content";
type Props = {
  url: string;
  frontmatter: CollectionEntry<"blog">["data"];
  repo: boolean;
};

const { url, frontmatter, repo } = Astro.props;
---

<a
  class="blogItemLink mb-4 border border-gray-300 hover:bg-gray-100 rounded-md"
  href={url}
  target={repo ? "_blank" : undefined}
  rel={repo ? "noopener noreferrer" : undefined}
>
  <div class="flex flex-wrap">
    <div class="w-1/3 md:w-1/4 lg:w-1/6 p-2">
      <Image
        src={frontmatter.image
          ? frontmatter.image
          : "/images/brands/github-big.png"}
        alt={frontmatter.title}
        className="w-30 h-30 rounded-md"
        isOptimization
        width={20 * 4}
        height={20 * 4}
      />
    </div>
    <div class="w-2/3 md:w-3/4 lg:w-5/6 p-2 relative mb-2">
      <h2 class="font-bold mb-2">{frontmatter.title}</h2>
      <p class="text-gray-600 mb-4 text-sm">{frontmatter.description}</p>
      <div class="flex flex-wrap absolute bottom-0">
        <span
          class="bg-gray-200 text-gray-700 rounded-lg px-3 py-1 text-sm font-semibold mr-2 mb-2"
        >
          {formatDate(new Date(frontmatter.date))}
        </span>
        {
          parseTags(frontmatter.tags).map((tag) => (
            <span class="bg-gray-200 text-gray-700 rounded-lg px-3 py-1 text-sm font-semibold mr-2 mb-2">
              #{tag}
            </span>
          ))
        }
      </div>
    </div>
  </div>
</a>
<!-- <style is:global>
  a.blogItemLink {
    border: 1px solid #fff;
    display: block;
    cursor: pointer;
    transition-property: all;
    transition-timing-function: fade;
    transition-duration: 150ms;
  }
  a.blogItemLink:hover {
    border: 1px solid #b9e1ff;
  }
</style> -->
