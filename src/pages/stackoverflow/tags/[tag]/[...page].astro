---
import { generateUniqueTags, matchesTagDefinition } from "@utils/collections";
import Layout from "@layouts/Layout.astro";
import MainLayout from "@layouts/MainLayout.astro";
import { PAGINATE_CONTENT, TAGS_DEFINITION } from "@const";
import stackOverflowData from "../../../../data/stackoverflow.json";

export async function getStaticPaths({ paginate }) {
  const questions = Object.values(stackOverflowData.data);
  const tags = generateUniqueTags(questions);

  let allPaths = [];

  for (const tag of tags) {
    const filteredQuestions = questions.filter(
      (post) =>
        post.tags &&
        post.tags.some((current) =>
          matchesTagDefinition(current, TAGS_DEFINITION[tag] || []),
        ),
    );

    const numberOfPages = Math.ceil(
      filteredQuestions.length / PAGINATE_CONTENT,
    );

    for (let i = 1; i <= numberOfPages; i++) {
      const prevPage = i === 1 ? null : `/stackoverflow/tags/${tag}/${i - 1}/`;
      const nextPage =
        i === numberOfPages ? null : `/stackoverflow/tags/${tag}/${i + 1}/`;

      allPaths.push({
        params: { tag, page: i },
        props: {
          questions: filteredQuestions.slice(
            (i - 1) * PAGINATE_CONTENT,
            i * PAGINATE_CONTENT,
          ),
          page: {
            lastPage: i.toString(),
            currentPage: 1,
            url: {
              prev: prevPage,
              next: nextPage,
            },
          },
        },
      });
    }
  }

  return allPaths;
}

const allQuestions = Object.values(stackOverflowData.data);
const uniqueTags = generateUniqueTags(allQuestions);

const { questions, page } = Astro.props;
---

<Layout
  title={page?.lastPage > 1
    ? `${Astro.params.tag} - My Stackoverflow Tag - Page ${page.currentPage}`
    : `${Astro.params.tag} - My Stackoverflow Tag`}
>
  <MainLayout pagination={{ prev: page?.url?.prev, next: page?.url?.next }}>
    <h2 class="text-2xl mb-4">Tag: {Astro.params.tag}</h2>
    <div class="flex flex-wrap">
      <!-- Tags Dropdown -->
      <div class="select-wrapper mr-3">
        <select
          class="customSelectbox border shadow-sm bg-gray-700 rounded-md border-gray-300 text-gray-300"
          onchange="location.href=`/stackoverflow/tags/${this.value}/1/`"
        >
          <option selected disabled>tags...</option>
          {
            uniqueTags.map((tag) => (
              <option value={tag} selected={tag === Astro.params.tag}>
                {tag}
              </option>
            ))
          }
        </select>
      </div>
    </div>

    <div class="grid gap-4 grid-cols-1 grid-rows-2 mt-5 lg:grid-cols-2">
      {
        questions?.map((question) => (
          <a
            href={question.link}
            target="_blank"
            rel="noopener noreferrer"
            class="p-4 border mb-2 border-neutral-200  bg-neutral-50 rounded flex items-center justify-between px-3 py-4 w-full hover:bg-neutral-200 transition-colors"
          >
            <div class="flex flex-col">
              <p class="font-bold text-neutral-900 ">{question.title}</p>
              <p class="text-neutral-600 " />
              <p class="text-neutral-600 ">Tags: {question.tags.join(", ")}</p>
            </div>
          </a>
        ))
      }
    </div>
  </MainLayout>
</Layout>
