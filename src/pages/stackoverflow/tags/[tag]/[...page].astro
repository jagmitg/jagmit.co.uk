---
import Layout from '@layouts/Layout.astro'
import StackoverflowLayout from '@layouts/StackoverflowLayout.astro'
import { generateUniqueTags, matchesTagDefinition } from '@utils/collections'
import type { Post } from '@utils/collections'
import { PAGINATE_CONTENT, TAGS_DEFINITION } from '@const'
import { getCollection, type CollectionEntry } from 'astro:content'

type StackOverflowEntry = CollectionEntry<'stackoverflow'>

interface Props {
    page: {
        data: StackOverflowEntry[];
        start: number;
        end: number;
        total: number;
        currentPage: number;
        size: number;
        lastPage: number;
        url: {
            current: string;
            prev: string | undefined;
            next: string | undefined;
        };
    };
}

export async function getStaticPaths({ paginate }) {
    const questions = await getCollection('stackoverflow');
    const questionPosts = questions.map(q => ({
        id: q.id,
        collection: 'stackoverflow' as const,
        slug: q.id,
        data: {
            ...q.data,
            tags: q.data.tags || []
        }
    })) as unknown as Post[];

    const uniqueTags = generateUniqueTags(questionPosts);

    return uniqueTags.flatMap(tag => {
        const filteredQuestions = questions.filter(question =>
            question.data.tags?.some(t =>
                matchesTagDefinition(t, TAGS_DEFINITION[tag] || [])
            )
        ).sort((a, b) =>
            new Date(b.data.creation_date).getTime() - new Date(a.data.creation_date).getTime()
        );

        return paginate(filteredQuestions, {
            params: { tag },
            pageSize: PAGINATE_CONTENT,
        });
    });
}

const { page } = Astro.props;
const { tag } = Astro.params;
---

<Layout title={`${tag} Questions - Page ${page.currentPage}`}>
    <StackoverflowLayout
        title={`Tag: ${tag}`}
        pagination={page.url}
        breadcrumb={true}
    >
        <div class="grid gap-4 grid-cols-1 grid-rows-2 mt-5 lg:grid-cols-2">
            {page.data.map((question) => (
                <a
                    href={question.data.link}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="p-4 border mb-2 relative border-neutral-200 bg-neutral-50 rounded flex items-center justify-between px-3 py-4 w-full hover:bg-neutral-200 transition-colors"
                >
                    <div class="flex flex-col">
                        <p class="font-bold text-neutral-900">
                            {question.data.title}
                        </p>
                        <p class="text-neutral-600">
                            Tags: {question.data.tags?.join(', ')}
                        </p>
                    </div>
                </a>
            ))}
        </div>
    </StackoverflowLayout>
</Layout>
