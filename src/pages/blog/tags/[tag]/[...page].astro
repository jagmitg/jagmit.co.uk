---
// @ts-nocheck
import BlogCardItem from "@components/BlogCardItem.astro";
import Layout from "@layouts/Layout.astro";
import MainLayout from "@layouts/MainLayout.astro";

import { getSortedPosts, getTagList } from "@utils/collections";
import type { GetStaticPathsOptions } from "astro";
import { BLOG_DESCRIPTION, PAGINATE_CONTENT } from "@const";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const allBlogPosts = await getSortedPosts();
  const tags = await getTagList();

  return tags.flatMap(tag =>
    paginate(
      allBlogPosts.filter(post =>
        post.data.tags.map((t: string) => t.toLowerCase()).includes(tag.name.toLowerCase())
      ),
      {
        params: { tag: tag.name },
        pageSize: PAGINATE_CONTENT,
      },
    ),
  );
}

const allTags = await getTagList();
const { tag } = Astro.params;
const { page } = Astro.props;

---

<Layout
  title={page.lastPage > 1 ? `${tag} tag - Page ${page.currentPage}` : `${tag} tag`}
  description={BLOG_DESCRIPTION}
>
  <MainLayout
    title={tag}
    tags={allTags.map(t => t.name)}
    breadcrumb={true}
    pagination={{ prev: page.url.prev, next: page.url.next }}
  >
    <div class="gap-4 flex flex-col">
      {page.data.map(post => (
        <BlogCardItem
          key={post.slug}
          url={post.data.repo ? post.data.repo : `/blog/${post.slug}/`}
          frontmatter={post.data}
          repo={!!post.data.repo}
        />
      ))}
    </div>
  </MainLayout>
</Layout>
