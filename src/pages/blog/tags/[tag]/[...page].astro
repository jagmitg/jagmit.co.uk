---
import BlogCardItem from "../../../../components/BlogCardItem.astro";
import TagsBox from "../../../../components/TagsBox.astro";
import Layout from "../../../../layouts/Layout.astro";
import MainLayout from "../../../../layouts/MainLayout.astro";
import {
  getBlogsAndRepos,
  CollectionEntry,
  parseTags,
  getAllTags,
} from "../../../../utils/collections";
import BlogDescription from "../../../../components/BlogDescription.astro";
import type { GetStaticPathsOptions, Page } from "astro";
import Pagination from "../../../../components/Pagination.astro";
import { BLOG_DESCRIPTION } from "../../../../constants";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const { allCollections } = await getBlogsAndRepos();
  const tags = getAllTags(allCollections);
  return tags.map((tag) =>
    paginate(
      allCollections.filter((post) =>
        parseTags(post.data.tags).some(
          (current) => current.toLowerCase() == tag
        )
      ),
      {
        params: { tag },
        pageSize: 3,
      }
    )
  );
}

const { allCollections } = await getBlogsAndRepos();
const allTags = getAllTags(allCollections);
const { tag } = Astro.params;
const { page } = Astro.props as {
  page: Page<CollectionEntry>;
};
---

<Layout description={BLOG_DESCRIPTION}>
  <MainLayout>
    <BlogDescription slot="description" />
    <div class="flex justify-between items-center py-6">
      <h2 class="text-2xl"><a href="/blog">Blog</a> / {tag}</h2>
      <TagsBox tags={allTags} slot="optional-content" />
    </div>
    <div class="gap-4 flex flex-col">
      {
        page.data.map(({ data, slug }) => (
          <BlogCardItem
            url={data.repo ? data.repo : `/blog/${slug}`}
            frontmatter={data}
          />
        ))
      }
    </div>
    <Pagination prev={page.url.prev} next={page.url.next} />
  </MainLayout>
</Layout>
